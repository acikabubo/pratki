server {
    listen 80;
    server_tokens off;  # don't show nginx version if error occurred

    # return 301 https://$http_host:443$request_uri;
    return 301 https://$host$request_uri;
}


server {
    listen              443 ssl;
    server_name         _;
    keepalive_timeout   70;
    server_tokens off;  # don't show nginx version if error occurred

    ssl on;
    ssl_certificate     pratki-heroku.crt;
    ssl_certificate_key pratki-heroku.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # ssl_session_cache shared:SSL:20m;
    # ssl_session_timeout 60m;
    # ssl_prefer_server_ciphers on;

    location / {
        proxy_pass https://pratki-heroku:5000;
    }

    location /flower/ {
        rewrite ^/flower/(.*)$ /$1 break;
        proxy_pass http://pratki-heroku:5555;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        auth_basic "Administrator flower credentials";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    location /supervisor/ {
        rewrite ^/supervisor/(.*)$ /$1 break;
        proxy_pass http://pratki-heroku:9001;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        auth_basic "Administrator supervisor credentials";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    error_page 401 /401.html;
    location = /401.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 502 /502.html;
    location = /502.html {
        root /usr/share/nginx/html;
        internal;
    }
}
